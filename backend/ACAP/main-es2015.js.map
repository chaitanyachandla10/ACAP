{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/acap.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/department/department.component.ts","./src/app/department/department.component.html","./src/app/manager/manager.component.ts","./src/app/manager/manager.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAA2C;AACoB;;;AAQxD,MAAM,WAAW;IAEtB,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAG1C,eAAe;QACf,gBAAW,GAAG;YACZ,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;aACnC,CAAC;SACH;IAR6C,CAAC;IAW/C,SAAS;QACP,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC,CAAC;QAClE,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;IAC9D,CAAC;IACD,sBAAsB;IAEpB,yBAAyB;IACzB,SAAS,CAAC,IAAI;QACZ,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,gCAAgC,EAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAC,IAAI,CAAC,WAAW,CAAC;aAClG,SAAS,CAAE,YAAY,CAAC,EAAE;YACzB,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAE5B,CAAC,CAAC,CAAC;IACL,CAAC;;sEA1BQ,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAyC;AACc;;;AAGvD,MAAM,MAAM,GAAW,EAAE,CAAC;AAMnB,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,MAAM,CAAC;KAChB;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,yEACA;QAAA,yEACG;QAAA,4EAAiC;QACpC,2EAA+B;QAE/B,4DAAM;QACN,4DAAM;;6FDCO,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACI;AACW;AACT;AACsB;AACN;AACS;AACN;AACV;;AAkBjD,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,CAAC,yDAAW,CAAC,YAPf;YACP,uEAAa;YACb,oEAAgB;YAChB,0DAAW;YACX,kEAAmB;YACnB,qEAAgB;SACjB;mIAIU,SAAS,mBAflB,2DAAY;QACZ,iFAAkB;QAClB,2EAAgB;QAChB,oFAAmB,aAGnB,uEAAa;QACb,oEAAgB;QAChB,0DAAW;QACX,kEAAmB;QACnB,qEAAgB;6FAKP,SAAS;cAjBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,iFAAkB;oBAClB,2EAAgB;oBAChB,oFAAmB;iBACpB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,0DAAW;oBACX,kEAAmB;oBACnB,qEAAgB;iBACjB;gBACD,SAAS,EAAE,CAAC,yDAAW,CAAC;gBACxB,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AC1BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;ICQtC,qEACI;IAAA,gEACJ;IAAA,qEAAI;IAAA,2EAAgB;IAAA,oEAAG;IAAA,uDAAmB;IAAA,4DAAI;IAAC,uDAAgC;IAAA,4DAAK;IACpF,qEAAK;IAAA,yEAAa;IAAA,oEAAG;IAAA,wDAAgB;IAAA,4DAAI;IAAC,wDAA4B;IAAA,4DAAK;IAC3E,sEAAK;IAAA,2EAAc;IAAA,qEAAG;IAAA,wDAAqB;IAAA,4DAAI;IAAC,wDAAiC;IAAA,4DAAK;IACtF,sEAAI;IAAA,yEAAa;IAAA,qEAAG;IAAA,wDAAiE;IAAA,4DAAI;IAAA,4DAAK;IAC9F,iEACA;IAAA,4DAAK;;;IALkB,0DAAmB;IAAnB,mFAAmB;IAAK,0DAAgC;IAAhC,4GAAgC;IAC1D,0DAAgB;IAAhB,gFAAgB;IAAK,0DAA4B;IAA5B,wGAA4B;IAChD,0DAAqB;IAArB,qFAAqB;IAAK,0DAAiC;IAAjC,6GAAiC;IAC7D,0DAAiE;IAAjE,+IAAiE;;;IAT3F,qEACM;IAAA,qEAAI;IAAA,uDAAuB;IAAA,4DAAK;IAChC,gEACA;IAAA,qEAAI;IAAA,uDAAoB;IAAA,4DAAK;IAC7B,kHACI;IAOR,gEACA;IAAA,qEAAI;IAAA,mEAAS;IAAA,4DAAK;IAClB,4DAAK;;;IAbG,0DAAuB;IAAvB,uFAAuB;IAEvB,0DAAoB;IAApB,oFAAoB;IACpB,0DAAmC;IAAnC,oFAAmC;;ADC5C,MAAM,kBAAkB;IAI7B,YAAoB,WAAwB,EAAS,WAAwB;QAAzD,gBAAW,GAAX,WAAW,CAAa;QAAS,gBAAW,GAAX,WAAW,CAAa;IAAI,CAAC;IAElF,QAAQ;QAEN,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,CAAC,IAAW,EAAC,EAAE;YACpD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,8BAA8B;YAC9B,mCAAmC;YACnC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YAC5C,KAAI,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,IAAE,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAChC;gBACE,OAAO,CAAC,GAAG,CAAC,aAAa,EAAC,CAAC,CAAC,CAAC;gBAC7B,KAAI,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,IAAE,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAC3C;oBACE,IAAI,cAAc,EAAC,WAAW,EAAC,YAAY,CAAC;oBAC5C,IAAI,GAAG,CAAC;oBACR,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,GAAC,IAAI,CAAC;oBAC3D,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,GAAC,GAAG,CAAC;oBACpD,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,GAAC,GAAG,CAAC;oBAC1D,GAAG,GAAG,cAAc,GAAG,WAAW,GAAG,YAAY,CAAC;oBAClD,KAAK,CAAC,GAAG,CAAC,CAAC;oBACX,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oBACjB,IAAI,CAAC,KAAK,IAAG,GAAG,CAAC;oBACjB,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBAClB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBACzB;aACF;QACH,CAAC,CAAC;IAEF,CAAC;;oFAlCQ,kBAAkB;kGAAlB,kBAAkB;QCT/B,yEACI;QAAA,wEAAmB;QAAA,oEAAS;QAAA,4DAAK;QAEjC,yEACE;QAAA,6GACM;QAeJ,wEACI;QAAA,qEACI;QAAA,qEAAI;QAAA,yEAAc;QAAA,4DAAK;QACvB,qEAAI;QAAA,kEAAM;QAAA,4DAAK;QACnB,4DAAK;QACL,sEACI;QAAA,sEAAI;QAAA,0EAAc;QAAA,4DAAK;QACvB,sEAAI;QAAA,gEAAI;QAAA,4DAAK;QACjB,4DAAK;QACL,sEACI;QAAA,sEAAI;QAAA,wEAAY;QAAA,4DAAK;QACrB,sEAAI;QAAA,gEAAI;QAAA,4DAAK;QACjB,4DAAK;QACT,4DAAQ;QA0BZ,4DAAM;QAEV,4DAAM;;QAzDI,0DAA8C;QAA9C,mFAA8C;;6FDK3C,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAC+C;;;;;;ICSzE,sEAA8C;IAAA,qFAA0B;IAAA,4DAAM;;;IADlF,0EACI;IAAA,uHAA8C;IAClD,4DAAM;;;IADG,0DAAwC;IAAxC,yGAAwC;;;IAS7C,sEAA2C;IAAA,8EAAmB;IAAA,4DAAM;;;IADxE,0EACI;IAAA,uHAA2C;IAC/C,4DAAM;;;IADG,0DAAqC;IAArC,sGAAqC;;;IAStC,yEAAiD;IAAA,uDAAK;IAAA,4DAAS;;;IAAd,0DAAK;IAAL,qEAAK;;;IAGtD,sEAA+C;IAAA,wFAA6B;IAAA,4DAAM;;;IADtF,0EACI;IAAA,uHAA+C;IACnD,4DAAM;;;IADG,0DAAyC;IAAzC,0GAAyC;;;IAa9C,yEAAiD;IAAA,uDAAK;IAAA,4DAAS;;;IAAd,0DAAK;IAAL,sEAAK;;;IAGtD,sEAA2C;IAAA,wFAA6B;IAAA,4DAAM;;;IADlF,0EACI;IAAA,8HAA2C;IAC/C,4DAAM;;;IADG,0DAAqC;IAArC,uGAAqC;;;IAO1C,yEAAiD;IAAA,uDAAK;IAAA,4DAAS;;;IAAd,0DAAK;IAAL,sEAAK;;;IAGtD,sEAAyC;IAAA,0FAA+B;IAAA,4DAAM;;;IADlF,0EACI;IAAA,8HAAyC;IAC7C,4DAAM;;;IADG,0DAAmC;IAAnC,qGAAmC;;;IAOxC,yEAAiD;IAAA,uDAAK;IAAA,4DAAS;;;IAAd,0DAAK;IAAL,sEAAK;;;IAGtD,sEAAsC;IAAA,uFAA4B;IAAA,4DAAM;;;IAD5E,0EACI;IAAA,8HAAsC;IAC1C,4DAAM;;;IADG,0DAAgC;IAAhC,kGAAgC;;;;;IA/BzD,0EACI;IAAA,0EACI;IAAA,yEAAuB;IAAA,uDAAiB;IAAA,4DAAK;IAC7C,0EACI;IAAA,0EACI;IAAA,wEAAO;IAAA,sEAAW;IAAA,4DAAQ;IAC1B,6EACI;IAAA,wEAA0B;IAC1B,+HAAiD;IACrD,4DAAS;IACT,wHACI;IAER,4DAAM;IACN,2EACI;IAAA,yEAAO;IAAA,qEAAS;IAAA,4DAAQ;IACxB,8EACI;IAAA,yEAA0B;IAC1B,+HAAiD;IACrD,4DAAS;IACT,wHACI;IAER,4DAAM;IACN,2EACI;IAAA,yEAAO;IAAA,qEAAS;IAAA,4DAAQ;IACxB,8EACI;IAAA,yEAA0B;IAC1B,+HAAiD;IACrD,4DAAS;IACT,wHACI;IAGR,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;;;;;IAnCyB,0DAAiB;IAAjB,2FAAiB;IACnC,0DAAqB;IAArB,iFAAqB;IAG0C,0DAA+D;IAA/D,4LAA+D;IAE/G,0DAAwC;IAAxC,2IAAwC;IAE/C,0DAAyC;IAAzC,iHAAyC;IAMY,0DAA6D;IAA7D,0LAA6D;IAE3G,0DAAwC;IAAxC,2IAAwC;IAE/C,0DAAuC;IAAvC,+GAAuC;IAMW,0DAA0D;IAA1D,uLAA0D;IAErG,0DAAwC;IAAxC,2IAAwC;IAE/C,0DAAoC;IAApC,4GAAoC;;ADzD1D,MAAM,mBAAmB;IAK9B,YAAoB,WAAwB,EAAS,WAAwB;QAAzD,gBAAW,GAAX,WAAW,CAAa;QAAS,gBAAW,GAAX,WAAW,CAAa;QAF7E,cAAS,GAAG,KAAK,CAAC;IAE+D,CAAC;IAElF,QAAQ;QACF,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC3C,cAAc,EAAC,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACxC,WAAW,EAAC,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrC,eAAe,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC1C,OAAO,EAAE,IAAI,wDAAS,CAAC,EAAE,CAAC;SAC3B,CAAC,CAAC;IACL,CAAC;IAEG,qDAAqD;IAC3D,IAAI,CAAC,KAAK,OAAO,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC;IAChD,IAAI,CAAC,KAAK,OAAO,IAAI,CAAC,CAAC,CAAC,OAAoB,CAAC,CAAC,CAAC;IAC/C,eAAe,CAAC,CAAC;QACf,MAAM,eAAe,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,CAAC;QAC5C,IAAI,IAAI,CAAC,CAAC,CAAC,MAAM,GAAG,eAAe,EAAE;YACjC,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,eAAe,EAAE,CAAC,EAAE,EAAE;gBAClD,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;oBACjC,WAAW,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;oBACtC,SAAS,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;oBACpC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;iBACpC,CAAC,CAAC,CAAC;aACP;SACJ;aAAM;YACH,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,IAAI,eAAe,EAAE,CAAC,EAAE,EAAE;gBACnD,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;aACtB;SACJ;IACL,CAAC;IAEC,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,+BAA+B;QAC/B,IAAI,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE;YAC7B,OAAO;SACV;QAED,iCAAiC;QACjC,KAAK,CAAC,mBAAmB,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;QAChF,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;IACzD,CAAC;IAEC,OAAO;QACL,yCAAyC;QACzC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;QAC5B,IAAI,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;IACnB,CAAC;IAED,OAAO;QACH,uCAAuC;QACvC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;IACnB,CAAC;;sFA5DU,mBAAmB;mGAAnB,mBAAmB;QCThC,yEACA;QAAA,0EACI;QAD+B,+IAAY,cAAU,IAAC;QACtD,yEACI;QAAA,wEAAwB;QAAA,4EAAiB;QAAA,4DAAK;QAC9C,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,wEAAO;QAAA,0EAAe;QAAA,4DAAQ;QAC9B,uEACA;QAAA,iHACI;QAEN,4DAAM;QACZ,4DAAM;QACN,0EACI;QAAA,0EACI;QAAA,yEAAO;QAAA,wEAAY;QAAA,4DAAQ;QAC3B,uEACA;QAAA,iHACI;QAEN,4DAAM;QACZ,4DAAM;QACF,0EACI;QAAA,0EACI;QAAA,yEAAO;QAAA,uEAAW;QAAA,4DAAQ;QAC1B,8EACI;QAD2D,oJAAU,2BAAuB,IAAC;QAC7F,yEAA0B;QAC1B,wHAAiD;QACrD,4DAAS;QACT,iHACI;QAER,4DAAM;QACd,4DAAM;QACV,4DAAM;QACN,oHACI;QAqCJ,2EACI;QAAA,8EAAqC;QAAA,kEAAM;QAAA,4DAAS;QACpD,8EAAwE;QAApB,4IAAS,aAAS,IAAC;QAAC,iEAAK;QAAA,4DAAS;QACtF,8EAAoE;QAApB,4IAAS,aAAS,IAAC;QAAC,iEAAK;QAAA,4DAAS;QACtF,4DAAM;QACV,4DAAM;QACV,4DAAO;QACP,4DAAM;;QAhFA,0DAA4B;QAA5B,yFAA4B;QAO6G,0DAAkE;QAAlE,wLAAkE;QACxL,0DAA4C;QAA5C,8GAA4C;QAQuE,0DAA+D;QAA/D,sLAA+D;QAClL,0DAAyC;QAAzC,2GAAyC;QAQwD,0DAAmE;QAAnE,0LAAmE;QAEzJ,0DAAwC;QAAxC,2IAAwC;QAE/C,0DAA6C;QAA7C,+GAA6C;QAM7D,0DAAiD;QAAjD,mFAAiD;;6FD3BjD,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAkD;;AAO3C,MAAM,gBAAgB;IAE3B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;gFALU,gBAAgB;gGAAhB,gBAAgB;QCP7B,oEAAG;QAAA,yEAAc;QAAA,4DAAI;;6FDOR,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AEND;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AcapService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  passon:any;\n  // Http Headers\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    })\n  }\n\n\n  getPeople(){\n    console.log(this.httpClient.get('http://localhost:3000/getdata'));\n    return this.httpClient.get('http://localhost:3000/getdata');\n  }\n  //http GET request end\n  \n    //http post request start\n    addPerson(data){\n      return this.httpClient.post('http://localhost:3000/datasend',JSON.stringify(data),this.httpOptions)\n      .subscribe( responseData => {\n        console.log(responseData);\n  \n      });\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ACAP';\n}\n","<div class=\"container\">\n<div class=\"col-md-12\">\n   <app-department></app-department>\n<app-dashboard></app-dashboard>\n\n</div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AcapService } from './acap.service';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { ManagerComponent } from './manager/manager.component';\nimport { DepartmentComponent } from './department/department.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    ManagerComponent,\n    DepartmentComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [AcapService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder,FormGroup, FormGroupDirective, FormArray, Validators} from '@angular/forms';\nimport { AcapService } from '../acap.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  ItemsArray:any;\n  total:any;\n  constructor(private formBuilder: FormBuilder,private acapservice: AcapService) { }\n\n  ngOnInit(): void {\n     \n    this.acapservice.getPeople().subscribe((data: any[])=>{\n      console.log(data);\n      //console.log(Array.of(data));\n      //this.ItemsArray = Array.of(data);\n      this.ItemsArray = data;\n      console.log(this.ItemsArray.manager.length);\n      for(var j=0; j>=data.length; j++)\n      {\n        console.log(\"-----j-----\",j);\n        for(var i=0; i>=data[j].manager.length; i++)\n        {\n          var deveploertotal,testertotal,managertotal;\n          var sum;\n          deveploertotal = this.ItemsArray.manager[i].developer*1000;\n          testertotal = this.ItemsArray.manager[i].tester*500;\n          managertotal = this.ItemsArray.manager[i].noofManager*300;\n          sum = deveploertotal + testertotal + managertotal;\n          alert(sum);\n          console.log(sum);\n          this.total +=sum;\n          alert(this.total);\n          console.log(this.total);\n        }\n      }\n    })\n\n    }\n\n}\n","<div class=\"col-md-12\">\n    <h1 align=\"center\">Dashboard</h1>\n\n    <div class=\"col-md-12\">\n      <ul *ngFor=\"let item of ItemsArray;let i = index;\">\n            <li>{{item.departmentname}}</li>\n            <hr>\n            <li>{{item.Managername}}</li>\n            <ul *ngFor=\"let items of item.manager;\">\n                <hr>\n            <li>no of Developer <b>{{items.developer}}</b> = Total {{items.developer*1000}}</li>\n            <li> no of tester <b>{{items.tester}}</b> = Total {{items.tester*500}}</li>\n            <li> no of manager <b>{{items.noofManager}}</b> = Total {{items.noofManager*300}}</li>\n            <li>Total =&ensp;<b>{{ items.developer*1000+items.tester*500+items.noofManager*300 }}</b></li>\n            <hr>   \n            </ul>\n        <hr>\n        <li>Total  = </li>\n        </ul>\n\n        <table>\n            <tr>\n                <td>Each Developer</td>\n                <td>$1,000</td>\n            </tr>\n            <tr>\n                <td>Each QA Tester</td>\n                <td>$500</td>\n            </tr>\n            <tr>\n                <td>Each Manager</td>\n                <td>$300</td>\n            </tr>\n        </table>\n        <!--<table class=\"table table-hover table-responsive\">\n            <thead>\n                <th>Depart-name</th>\n                <th>ManagerName</th>\n                <th>\n                    <thead>\n                    <th>M |D | S</th>\n                </thead>\n                </th>\n            </thead>\n            <tbody *ngFor=\"let item of ItemsArray;let i = index;\">\n                <tr>\n                    <td>{{item.departmentname}}</td>\n                    <td>{{item.Managername}}</td>\n                    <td *ngFor=\"let items of item.manager;\">\n                        <tr>\n                        <td>{{items.developer}}</td>\n                        <td>{{items.tester}}</td>\n                        <td>{{items.noofManager}}</td>\n                        </tr>\n                    </td>\n                </tr>\n\n            </tbody>\n        </table>-->\n    </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder,FormGroup, FormGroupDirective, FormArray, Validators} from '@angular/forms';\nimport { AcapService } from '../acap.service';\n\n@Component({\n  selector: 'app-department',\n  templateUrl: './department.component.html',\n  styleUrls: ['./department.component.css']\n})\nexport class DepartmentComponent implements OnInit {\n  \n  departmentForm: FormGroup;\n  submitted = false;\n\n  constructor(private formBuilder: FormBuilder,private acapservice: AcapService) { }\n\n  ngOnInit(): void {\n        this.departmentForm = this.formBuilder.group({\n          departmentname:['', Validators.required],\n          managername:['', Validators.required],\n          numberOfManager: ['', Validators.required],\n          manager: new FormArray([])\n        });\n      }\n\n          // convenience getters for easy access to form fields\n    get f() { return this.departmentForm.controls; }\n    get t() { return this.f.manager as FormArray; }\n    onChangeTickets(e) {\n      const numberOfManager = e.target.value || 0;\n      if (this.t.length < numberOfManager) {\n          for (let i = this.t.length; i < numberOfManager; i++) {\n              this.t.push(this.formBuilder.group({\n                noofManager: ['', Validators.required],\n                developer: ['', Validators.required],\n                tester: ['', [Validators.required]]\n              }));\n          }\n      } else {\n          for (let i = this.t.length; i >= numberOfManager; i--) {\n              this.t.removeAt(i);\n          }\n      }\n  }\n\n    onSubmit() {\n      this.submitted = true;\n\n      // stop here if form is invalid\n      if (this.departmentForm.invalid) {\n          return;\n      }\n\n      // display form values on success\n      alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(this.departmentForm.value, null, 4));\n      this.acapservice.addPerson(this.departmentForm.value)\n  }\n\n    onReset() {\n      // reset whole form back to initial state\n      this.submitted = false;\n      this.departmentForm.reset();\n      this.t.clear();\n  }\n\n  onClear() {\n      // clear errors and reset ticket fields\n      this.submitted = false;\n      this.t.reset();\n  }\n\n}\n","<div class=\"col-md-12\" align=\"center\">\n<form [formGroup]=\"departmentForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"card m-3\">\n        <h5 class=\"card-header\">Create Department</h5>\n        <div class=\"card-body border-bottom\">\n            <div class=\"form-row\">\n                <div class=\"form-group\">\n                    <label>Department Name</label>\n                    <input type=\"text\" formControlName=\"departmentname\" style=\"box-shadow: 1px 1px 5px blue;color:black;\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.departmentname.errors }\" required/>\n                    <div *ngIf=\"submitted && f.departmentname.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.departmentname.errors.required\">departmentname is required</div>\n                    </div>\n                  </div>\n            </div>\n            <div class=\"form-row\">\n                <div class=\"form-group\">\n                    <label>Manager Name</label>\n                    <input type=\"text\" formControlName=\"managername\" style=\"box-shadow: 1px 1px 5px blue;color:black;\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.managername.errors }\" required/>\n                    <div *ngIf=\"submitted && f.managername.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.managername.errors.required\">manager is required</div>\n                    </div>\n                  </div>\n            </div>\n                <div class=\"form-row\">\n                    <div class=\"form-group\">\n                        <label>Add manager</label>\n                        <select formControlName=\"numberOfManager\" class=\"form-control\" (change)=\"onChangeTickets($event)\" [ngClass]=\"{ 'is-invalid': submitted && f.numberOfTickets.errors }\">\n                            <option value=\"\"></option>\n                            <option *ngFor=\"let i of [1,2,3,4,5,6,7,8,9,10]\">{{i}}</option>\n                        </select>\n                        <div *ngIf=\"submitted && f.numberOfManager.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.numberOfManager.errors.required\">Number of manager is required</div>\n                        </div>\n                    </div>\n            </div>\n        </div>\n        <div *ngFor=\"let manager of t.controls; let i = index\" class=\"list-group list-group-flush\">\n            <div class=\"list-group-item\">\n                <h5 class=\"card-title\">manager {{i + 1}}</h5>\n                <div [formGroup]=\"manager\" class=\"form-row\">\n                    <div class=\"form-group col-4\">\n                        <label>Add manager</label>\n                        <select formControlName=\"noofManager\" class=\"form-control\"  [ngClass]=\"{ 'is-invalid': submitted && f.noofManager.errors }\">\n                            <option value=\"\"></option>\n                            <option *ngFor=\"let i of [1,2,3,4,5,6,7,8,9,10]\">{{i}}</option>\n                        </select>\n                        <div *ngIf=\"submitted && f.noofManager.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.noofManager.errors.required\">Number of manager is required</div>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-4\">\n                        <label>Developer</label>\n                        <select formControlName=\"developer\" class=\"form-control\"  [ngClass]=\"{ 'is-invalid': submitted && f.developer.errors }\">\n                            <option value=\"\"></option>\n                            <option *ngFor=\"let j of [1,2,3,4,5,6,7,8,9,10]\">{{j}}</option>\n                        </select>\n                        <div *ngIf=\"submitted && f.developer.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.developer.errors.required\">Number of Developer is required</div>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-4\">\n                        <label>QA Tester</label>\n                        <select formControlName=\"tester\" class=\"form-control\"  [ngClass]=\"{ 'is-invalid': submitted && f.tester.errors }\">\n                            <option value=\"\"></option>\n                            <option *ngFor=\"let k of [1,2,3,4,5,6,7,8,9,10]\">{{k}}</option>\n                        </select>\n                        <div *ngIf=\"submitted && f.tester.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.tester.errors.required\">Number of Tester is required</div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"card-footer text-center border-top-0\">\n            <button class=\"btn btn-primary mr-1\">SUbmit</button>\n            <button class=\"btn btn-secondary mr-1\" type=\"reset\" (click)=\"onReset()\">Reset</button>\n            <button class=\"btn btn-secondary\" type=\"button\" (click)=\"onClear()\">Clear</button>\n        </div>\n    </div>\n</form>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-manager',\n  templateUrl: './manager.component.html',\n  styleUrls: ['./manager.component.css']\n})\nexport class ManagerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>manager works!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}